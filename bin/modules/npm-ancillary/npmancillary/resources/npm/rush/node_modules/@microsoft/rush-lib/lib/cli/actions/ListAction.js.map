{"version":3,"file":"ListAction.js","sourceRoot":"","sources":["../../../src/cli/actions/ListAction.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\nimport { Import, Sort } from '@rushstack/node-core-library';\r\nimport { BaseRushAction } from './BaseRushAction';\r\nimport { RushCommandLineParser } from '../RushCommandLineParser';\r\nimport { CommandLineFlagParameter } from '@rushstack/ts-command-line';\r\nimport { RushConfigurationProject } from '../../api/RushConfigurationProject';\r\nimport { VersionPolicyDefinitionName } from '../../api/VersionPolicy';\r\nimport { SelectionParameterSet } from '../SelectionParameterSet';\r\n\r\nconst cliTable: typeof import('cli-table') = Import.lazy('cli-table', require);\r\n\r\n/**\r\n * Shape of \"rush list --json\" output.\r\n *\r\n * It contains parts (with different names) coming from\r\n * {@link ../../api/RushConfigurationProject#IRushConfigurationProjectJson | IRushConfigurationProjectJson}.\r\n */\r\nexport interface IJsonEntry {\r\n  name: string;\r\n  version: string;\r\n  /**\r\n   * @see {@link ../../api/RushConfigurationProject#IRushConfigurationProjectJson.publishFolder | IRushConfigurationProjectJson.publishFolder}\r\n   */\r\n  path: string;\r\n  fullPath: string;\r\n  /**\r\n   * @see {@link ../../api/RushConfigurationProject#IRushConfigurationProjectJson.versionPolicyName | IRushConfigurationProjectJson.versionPolicyName}\r\n   */\r\n  versionPolicyName?: string;\r\n  /**\r\n   * @see {@link ../../api/VersionPolicy#VersionPolicyDefinitionName | VersionPolicyDefinitionName}\r\n   */\r\n  versionPolicy?: string;\r\n  /**\r\n   * @see {@link ../../api/RushConfigurationProject#IRushConfigurationProjectJson.shouldPublish | IRushConfigurationProjectJson.shouldPublish}\r\n   */\r\n  shouldPublish?: boolean;\r\n  /**\r\n   * @see {@link ../../api/RushConfigurationProject#IRushConfigurationProjectJson.reviewCategory | IRushConfigurationProjectJson.reviewCategory}\r\n   */\r\n  reviewCategory?: string;\r\n}\r\n\r\nexport interface IJsonOutput {\r\n  projects: IJsonEntry[];\r\n}\r\n\r\nexport class ListAction extends BaseRushAction {\r\n  private _version!: CommandLineFlagParameter;\r\n  private _path!: CommandLineFlagParameter;\r\n  private _fullPath!: CommandLineFlagParameter;\r\n  private _jsonFlag!: CommandLineFlagParameter;\r\n  private _detailedFlag!: CommandLineFlagParameter;\r\n  private _selectionParameters!: SelectionParameterSet;\r\n\r\n  public constructor(parser: RushCommandLineParser) {\r\n    super({\r\n      actionName: 'list',\r\n      summary: 'List package information for all projects in the repo',\r\n      documentation:\r\n        'List package names, and optionally version (--version) and ' +\r\n        'path (--path) or full path (--full-path), for projects in the ' +\r\n        'current rush config.',\r\n      parser\r\n    });\r\n  }\r\n\r\n  protected onDefineParameters(): void {\r\n    this._version = this.defineFlagParameter({\r\n      parameterLongName: '--version',\r\n      parameterShortName: '-v',\r\n      description:\r\n        'If this flag is specified, the project version will be ' +\r\n        'displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._path = this.defineFlagParameter({\r\n      parameterLongName: '--path',\r\n      parameterShortName: '-p',\r\n      description:\r\n        'If this flag is specified, the project path will be ' +\r\n        'displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._fullPath = this.defineFlagParameter({\r\n      parameterLongName: '--full-path',\r\n      description:\r\n        'If this flag is specified, the project full path will ' +\r\n        'be displayed in a column along with the package name.'\r\n    });\r\n\r\n    this._detailedFlag = this.defineFlagParameter({\r\n      parameterLongName: '--detailed',\r\n      description:\r\n        'For the non --json view, if this flag is specified, ' +\r\n        'include path (-p), version (-v) columns along with ' +\r\n        'the projectâ€™s applicable: versionPolicy, versionPolicyName, ' +\r\n        'shouldPublish, and reviewPolicy fields.'\r\n    });\r\n\r\n    this._jsonFlag = this.defineFlagParameter({\r\n      parameterLongName: '--json',\r\n      description: 'If this flag is specified, output will be in JSON format.'\r\n    });\r\n\r\n    this._selectionParameters = new SelectionParameterSet(this.rushConfiguration, this);\r\n  }\r\n\r\n  protected async runAsync(): Promise<void> {\r\n    const selection: Set<RushConfigurationProject> = this._selectionParameters.getSelectedProjects();\r\n    Sort.sortSetBy(selection, (x) => x.packageName);\r\n    if (this._jsonFlag.value && this._detailedFlag.value) {\r\n      throw new Error(`The parameters \"--json\" and \"--detailed\" cannot be used together.`);\r\n    }\r\n    if (this._jsonFlag.value) {\r\n      this._printJson(selection);\r\n    } else if (this._version.value || this._path.value || this._fullPath.value || this._detailedFlag.value) {\r\n      this._printListTable(selection);\r\n    } else {\r\n      this._printList(selection);\r\n    }\r\n  }\r\n\r\n  private _printJson(selection: Set<RushConfigurationProject>): void {\r\n    const projects: IJsonEntry[] = Array.from(selection, (config: RushConfigurationProject): IJsonEntry => {\r\n      let reviewCategory: undefined | string;\r\n      let shouldPublish: undefined | boolean;\r\n      let versionPolicy: undefined | string;\r\n      let versionPolicyName: undefined | string;\r\n      if (config.versionPolicy !== undefined) {\r\n        const definitionName: string = VersionPolicyDefinitionName[config.versionPolicy.definitionName];\r\n        versionPolicy = `${definitionName}`;\r\n        versionPolicyName = config.versionPolicy.policyName;\r\n      } else {\r\n        shouldPublish = config.shouldPublish;\r\n      }\r\n      if (config.reviewCategory) {\r\n        reviewCategory = config.reviewCategory;\r\n      }\r\n      return {\r\n        name: config.packageName,\r\n        version: config.packageJson.version,\r\n        path: config.projectRelativeFolder,\r\n        fullPath: config.projectFolder,\r\n        versionPolicy,\r\n        versionPolicyName,\r\n        shouldPublish,\r\n        reviewCategory\r\n      };\r\n    });\r\n\r\n    const output: IJsonOutput = {\r\n      projects\r\n    };\r\n    console.log(JSON.stringify(output, undefined, 2));\r\n  }\r\n\r\n  private _printList(selection: Set<RushConfigurationProject>): void {\r\n    for (const project of selection) {\r\n      console.log(project.packageName);\r\n    }\r\n  }\r\n\r\n  private _printListTable(selection: Set<RushConfigurationProject>): void {\r\n    const tableHeader: string[] = ['Project'];\r\n    if (this._version.value || this._detailedFlag.value) {\r\n      tableHeader.push('Version');\r\n    }\r\n    if (this._path.value || this._detailedFlag.value) {\r\n      tableHeader.push('Path');\r\n    }\r\n    if (this._fullPath.value) {\r\n      tableHeader.push('Full Path');\r\n    }\r\n    if (this._detailedFlag.value) {\r\n      tableHeader.push('Version policy');\r\n      tableHeader.push('Version policy name');\r\n      tableHeader.push('Should publish');\r\n      tableHeader.push('Review category');\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/typedef\r\n    const table = new cliTable({\r\n      head: tableHeader\r\n    });\r\n\r\n    for (const project of selection) {\r\n      const packageRow: string[] = [project.packageName];\r\n      if (this._version.value || this._detailedFlag.value) {\r\n        packageRow.push(project.packageJson.version);\r\n      }\r\n      if (this._path.value || this._detailedFlag.value) {\r\n        packageRow.push(project.projectRelativeFolder);\r\n      }\r\n      if (this._fullPath.value) {\r\n        packageRow.push(project.projectFolder);\r\n      }\r\n      if (this._detailedFlag.value) {\r\n        // When we HAVE a version policy\r\n        let versionPolicyDefinitionName: string = '';\r\n        let versionPolicyName: string = '';\r\n        // When we DO NOT have version policy, fallback to shouldPublish boolean\r\n        let shouldPublish: string = '';\r\n        let reviewCategory: string = '';\r\n        if (project.versionPolicy !== undefined) {\r\n          const definitionName: string = VersionPolicyDefinitionName[project.versionPolicy.definitionName];\r\n          versionPolicyDefinitionName = definitionName;\r\n          versionPolicyName = project.versionPolicy.policyName;\r\n        } else {\r\n          shouldPublish = `${String(project.shouldPublish)}`;\r\n        }\r\n        if (project.reviewCategory) {\r\n          reviewCategory = project.reviewCategory;\r\n        }\r\n        packageRow.push(versionPolicyDefinitionName);\r\n        packageRow.push(versionPolicyName);\r\n        packageRow.push(shouldPublish);\r\n        packageRow.push(reviewCategory);\r\n      }\r\n      table.push(packageRow);\r\n    }\r\n    console.log(table.toString());\r\n  }\r\n}\r\n"]}